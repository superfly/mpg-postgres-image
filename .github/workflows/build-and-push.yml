name: Build and Push Docker Image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/mpg-operator-postgres
  EXPORTER_IMAGE_NAME: ${{ github.repository }}/pg-exporter

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up QEMU for multi-architecture support
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short
            type=raw,value={{date 'YYYYMMDD'}}

      - name: Extract metadata for Docker - PostGIS
        id: meta-postgis
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,suffix=-postgis
            type=sha,format=short,suffix=-postgis
            type=raw,value={{date 'YYYYMMDD'}},suffix=-postgis

      - name: Extract metadata for Docker - PG17
        id: meta-pg17
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,suffix=-pg17
            type=sha,format=short,suffix=-pg17
            type=raw,value={{date 'YYYYMMDD'}},suffix=-pg17

      - name: Extract metadata for Docker - PG17 PostGIS
        id: meta-pg17-postgis
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,suffix=-pg17-postgis
            type=sha,format=short,suffix=-pg17-postgis
            type=raw,value={{date 'YYYYMMDD'}},suffix=-pg17-postgis

      - name: Build and push Docker image - Standard
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            BASE_IMAGE_TAG=2.6.0-ppg16.8-postgres
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image - PostGIS
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            BASE_IMAGE_TAG=2.6.0-ppg16.8-postgres-gis3.3.8
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-postgis.outputs.tags }}
          labels: ${{ steps.meta-postgis.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image - PG17
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            BASE_IMAGE_TAG=2.6.0-ppg17.4-postgres
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-pg17.outputs.tags }}
          labels: ${{ steps.meta-pg17.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image - PG17 PostGIS
        uses: docker/build-push-action@v5
        with:
          context: .
          build-args: |
            BASE_IMAGE_TAG=2.6.0-ppg17.4-postgres-gis3.3.8
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-pg17-postgis.outputs.tags }}
          labels: ${{ steps.meta-pg17-postgis.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract metadata for Docker - PG Exporter
        id: meta-exporter
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.EXPORTER_IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=sha,format=short
            type=raw,value={{date 'YYYYMMDD'}}

      - name: Build and push Docker image - PG Exporter
        uses: docker/build-push-action@v5
        with:
          context: ./metrics
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-exporter.outputs.tags }}
          labels: ${{ steps.meta-exporter.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
